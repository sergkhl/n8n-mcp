{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "n8n API Integration Contracts",
  "description": "Contracts for n8n REST API integration (optional features)",
  "version": "1.0.0",
  "baseUrl": "https://your-n8n-instance.com/api/v1",
  "authentication": {
    "type": "API Key",
    "header": "X-N8N-API-KEY",
    "description": "API key from n8n instance settings"
  },
  "endpoints": {
    "workflows": {
      "list": {
        "method": "GET",
        "path": "/workflows",
        "parameters": {
          "query": {
            "limit": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 25
            },
            "cursor": "string",
            "active": "boolean",
            "tags": "string",
            "projectId": "string",
            "excludePinnedData": {
              "type": "boolean",
              "default": false
            }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": { "$ref": "#/definitions/WorkflowSummary" }
            },
            "nextCursor": "string"
          }
        }
      },
      "get": {
        "method": "GET",
        "path": "/workflows/{id}",
        "parameters": {
          "path": {
            "id": "string"
          }
        },
        "response": { "$ref": "#/definitions/Workflow" }
      },
      "create": {
        "method": "POST",
        "path": "/workflows",
        "body": { "$ref": "#/definitions/WorkflowCreate" },
        "response": { "$ref": "#/definitions/Workflow" }
      },
      "update": {
        "method": "PUT",
        "path": "/workflows/{id}",
        "parameters": {
          "path": { "id": "string" }
        },
        "body": { "$ref": "#/definitions/WorkflowUpdate" },
        "response": { "$ref": "#/definitions/Workflow" }
      },
      "delete": {
        "method": "DELETE",
        "path": "/workflows/{id}",
        "parameters": {
          "path": { "id": "string" }
        },
        "response": { "$ref": "#/definitions/Workflow" }
      }
    },
    "executions": {
      "list": {
        "method": "GET",
        "path": "/executions",
        "parameters": {
          "query": {
            "limit": { "type": "integer", "minimum": 1, "maximum": 100, "default": 25 },
            "cursor": "string",
            "workflowId": "string",
            "status": { "enum": ["success", "error", "waiting"] }
          }
        },
        "response": {
          "type": "object",
          "properties": {
            "data": { "type": "array", "items": { "$ref": "#/definitions/ExecutionSummary" } },
            "nextCursor": "string"
          }
        }
      },
      "get": {
        "method": "GET",
        "path": "/executions/{id}",
        "parameters": {
          "path": { "id": "string" },
          "query": {
            "includeData": { "type": "boolean", "default": true }
          }
        },
        "response": { "$ref": "#/definitions/Execution" }
      },
      "delete": {
        "method": "DELETE",
        "path": "/executions/{id}",
        "parameters": {
          "path": { "id": "string" }
        },
        "response": { "type": "object", "properties": { "success": { "type": "boolean" } } }
      }
    },
    "webhooks": {
      "execute": {
        "method": "POST",
        "path": "/webhook/{path}",
        "parameters": {
          "path": { "path": "string" },
          "query": {
            "waitForResponse": { "type": "boolean", "default": false }
          }
        },
        "body": "object",
        "response": {
          "oneOf": [
            { "type": "object", "properties": { "executionId": "string" } },
            { "type": "object", "properties": { "data": "object" } }
          ]
        }
      }
    },
    "health": {
      "check": {
        "method": "GET",
        "path": "/healthz",
        "response": {
          "type": "object",
          "properties": {
            "status": { "enum": ["ok", "error"] },
            "instanceId": "string",
            "n8nVersion": "string"
          }
        }
      }
    }
  },
  "definitions": {
    "WorkflowSummary": {
      "type": "object",
      "properties": {
        "id": "string",
        "name": "string",
        "active": "boolean",
        "createdAt": "string",
        "updatedAt": "string",
        "tags": { "type": "array", "items": "string" }
      }
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "id": "string",
        "name": "string",
        "nodes": { "type": "array", "items": { "$ref": "#/definitions/WorkflowNode" } },
        "connections": { "$ref": "#/definitions/WorkflowConnections" },
        "active": "boolean",
        "settings": { "$ref": "#/definitions/WorkflowSettings" },
        "staticData": "object",
        "tags": { "type": "array", "items": "string" },
        "createdAt": "string",
        "updatedAt": "string"
      }
    },
    "WorkflowCreate": {
      "type": "object",
      "properties": {
        "name": "string",
        "nodes": { "type": "array", "items": { "$ref": "#/definitions/WorkflowNode" } },
        "connections": { "$ref": "#/definitions/WorkflowConnections" },
        "settings": { "$ref": "#/definitions/WorkflowSettings" },
        "tags": { "type": "array", "items": "string" }
      },
      "required": ["name", "nodes", "connections"]
    },
    "WorkflowUpdate": {
      "type": "object",
      "properties": {
        "name": "string",
        "nodes": { "type": "array", "items": { "$ref": "#/definitions/WorkflowNode" } },
        "connections": { "$ref": "#/definitions/WorkflowConnections" },
        "active": "boolean",
        "settings": { "$ref": "#/definitions/WorkflowSettings" },
        "tags": { "type": "array", "items": "string" }
      }
    },
    "WorkflowNode": {
      "type": "object",
      "properties": {
        "id": "string",
        "name": "string",
        "type": "string",
        "typeVersion": "number",
        "position": { "type": "array", "items": "number", "minItems": 2, "maxItems": 2 },
        "parameters": "object",
        "credentials": "object",
        "disabled": "boolean"
      },
      "required": ["name", "type", "typeVersion", "position"]
    },
    "WorkflowConnections": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "node": "string",
                    "type": "string",
                    "index": "number"
                  },
                  "required": ["node", "type", "index"]
                }
              }
            }
          }
        }
      }
    },
    "WorkflowSettings": {
      "type": "object",
      "properties": {
        "executionOrder": { "enum": ["v0", "v1"] },
        "timezone": "string",
        "errorWorkflow": "string",
        "executionTimeout": "number"
      }
    },
    "ExecutionSummary": {
      "type": "object",
      "properties": {
        "id": "string",
        "finished": "boolean",
        "status": { "enum": ["success", "error", "waiting"] },
        "startedAt": "string",
        "stoppedAt": "string",
        "workflowId": "string",
        "workflowName": "string"
      }
    },
    "Execution": {
      "type": "object",
      "allOf": [
        { "$ref": "#/definitions/ExecutionSummary" },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "resultData": "object",
                "executionData": "object"
              }
            }
          }
        }
      ]
    }
  },
  "error_codes": {
    "400": "Bad Request - Invalid parameters",
    "401": "Unauthorized - Invalid or missing API key",
    "403": "Forbidden - Insufficient permissions",
    "404": "Not Found - Resource doesn't exist",
    "422": "Unprocessable Entity - Validation failed",
    "429": "Too Many Requests - Rate limit exceeded",
    "500": "Internal Server Error - n8n instance error"
  },
  "rate_limits": {
    "default": "60 requests/minute",
    "webhook_execution": "100 requests/minute",
    "workflow_operations": "30 requests/minute"
  }
}
